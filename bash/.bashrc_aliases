# COMMAND aliases
alias lla='ls -laGF'
alias ll='ls -lGF'
alias g='grep --color=auto'
alias l='less'
alias m='more'
alias h='history'
alias ..='cd ..'
alias ...='cd .. ; cd ..'
alias l.='ls -dG .[a-zA-Z]*'
alias tx='tar xvfz'
alias tc='tar cvfz'
alias tl='tail -f'
alias k9='kill -9'
alias ipc='ipcalc'
alias whcy='whois -h whois.cymru.com'
alias whri='whois -h riswhois.ripe.net'
alias whma='whois -h pdns.circl.lu'
alias digr='dig +short -x'
alias vi='vim'
alias pyclean='find . -name "*.pyc" -exec rm {} \;'
alias pycheck='pep8 --ignore=E501 --show-source --show-pep8'
alias encode='python -c "import urllib, sys; print urllib.quote(sys.argv[1])"'
alias decode='python -c "import urllib, sys; print urllib.unquote(sys.argv[1])"'
alias chrome='open -a "Google Chrome"'
alias mail.sapo='open -a "Google Chrome" --args -app="https://mail.sapo.pt"'
alias burp.chrome='open -a "Google Chrome Canary" --args --proxy-server=http://localhost:8080'
alias mh='mdown_html'
alias myip='curl -s whatismyip.akamai.com'
alias bubu='brew update && brew upgrade'
alias r='ranger'

# Cheatsheets all the way
function cht { curl https://cht.sh/"$1"; }

# PKI
function jksprint { keytool -v -list -keystore "$1"; }
function pemprint { openssl x509 -in "$1" -noout -issuer -subject -dates -fingerprint -serial; }
function pemprintfull { openssl x509 -in "$1" -text -noout; }
function pemget { echo | openssl s_client -showcerts -connect "$1"; }
function pemgetprint { echo | openssl s_client -showcerts -connect "$1" | openssl x509 -in /dev/stdin -text -noout; }
function pemgetsplit { echo | openssl s_client -showcerts -connect "$1" 2> /dev/null | awk -v c=-1 '/-----BEGIN CERTIFICATE-----/{inc=1;c++} inc {print > ("level" c ".crt")} /---END CERTIFICATE-----/{inc=0}'; }
function pemcachain { openssl verify -CAfile "$1" "$2"; }
function pemmodpriv { openssl rsa -noout -modulus -in "$1" | md5; }
function pemmodpub { openssl x509 -noout -modulus -in "$1" | md5; }
function pemmodreq { openssl req -noout -modulus -in "$1" | md5; }
function crlpemprint { openssl crl -inform PEM -in "$1" -text -noout; }
function crlderprint { openssl crl -inform DER -in "$1" -text -noout; }
function pemkeyremove { openssl rsa -in "$1" -out "$2"; }
function p12topem { openssl pkcs12 -in "$1" -out "$2" -clcerts; }
function pemtop12 { openssl pkcs12 -export -inkey "$1" -in "$1" -out "$2" ; }
function pemserver { echo '0:4433' ; openssl s_server -cert "$1" -key "$2" -www; }

# Calendar
alias cday='cal'
alias cdayw='ncal -w'

# Tmux
alias tmux='tmux -u'
alias ta='tmux attach-session -t'
alias tns='tmux new-session -s'
alias tls='tmux ls'

# TODO.TXT
alias gt='todo.sh'
alias gta='gt -t add'
alias gtaa='gt -t adda'
alias gtdp='gt dp'
alias gtpv='gt projectview'
alias gtb='gt birdseye'
alias gtl='gt lately'
alias gtls='gt ls'
alias gtlsp='gt lsp'
alias gtd='gt do'
alias gtp='gt p'
alias gogt='cd $HOME/Documents/TRUNK/todo'
alias gogtn='cd $HOME/Documents/TRUNK/todo/notes'
alias pc='punch'
alias pci='punch in'
alias pco='punch out'
alias pcw='punch what'
alias pca='punch archive'
alias pcr='punch report'
alias wdb='work-day-byebye'
alias wdk='work-day-kick'

# Text
alias gott='cd "${TT}"'
alias gottw='cd "${TT}"/work'
alias gott='cd "${TT}"'
alias cgn='MD="$(date +%Y%m%d%H%M)"; MF="${MD}.md"; cp "${TT}"/generic.md "${MF}"; sed -i "" "s/Created at\:/Created at\: $(date)/g" ${MF}; sed -i "" "s/Updated at\:/Updated at\: $(date)/g" ${MF}'
alias cgn='MD="$(date +%Y%m%d%H%M)"; MF="${MD}.md"; cp "${TT}"/generic.md "${MF}"; sed -i "" "s/Created at\:/Created at\: $(date)/g" ${MF}; sed -i "" "s/Updated at\:/Updated at\: $(date)/g" ${MF}'
alias cmg='MD="$(date +%Y%m%d%H%M)"; MF="${MD}.md"; cp "${TT}"/meeting_notes.md "${MF}"; sed -i "" "s/Date\:/Date\: $(date)/g" ${MF}'
alias cvf='MD="$(date +%Y%m%d%H%M)"; MF="${MD}.md"; cp "${TT}"/security/vulnarability_management_follow_up.md "${MF}"; sed -i "" "s/Date\:/Date\: $(date)/g" ${MF}'

### Vagrant ###
alias vup='vagrant up'
alias vh='vagrant halt'
alias vs='vagrant suspend'
alias vr='vagrant resume'
alias vrld='vagrant reload'
alias vssh='vagrant ssh'
alias vstat='vagrant status'
alias vgstat='vagrant version && vagrant global-status'
alias vgstatu='vagrant version && vagrant global-status --prune'
